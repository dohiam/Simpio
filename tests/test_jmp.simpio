;!
;  @file /test_jmp.pio
;  @brief Basic test of the PIO JMP instruction
;  @details
;  Tests the different forms of JMP (different sources and operations for the jump condition).
;  This test is self checking - if the behavior is correct, it will land on the last statement.
;  
;   fine-print: copyright 2023 David Hamilton. This is free software (see LICENSE.txt in root directory), provided "AS IS" without any warranty, express or implied.
; 

; pio 0, sm 0, input gpio 1, output gpio 5
.config pio 0
.config sm 0
.config jmp_pin 31
.config set_pins 1 1
.config out_pins 5 1
.config side_set_pins 2
.config side_set_count 1 1 0
.config shiftctl_out 1 0 4      ; dir=1, no autopull, threshold 4

test1:
    JMP test2
    JMP wrong
test2:
    SET X 0
    JMP !X test3
    JMP wrong
test3:
    SET X 31
    JMP !X wrong
    SET X 3
countdownx:
    JMP X-- countdownx
test4:
    SET Y 0
    JMP !Y test5
    JMP wrong
test5:
    SET Y 31
    JMP !Y wrong
    SET Y, 3
countdowny:
    JMP Y-- countdowny
    SET X 1
    SET Y 2
    JMP X!=Y test6
    JMP wrong
test6:
    SET X 2
    JMP X!=Y wrong
    
    WRITE 15         ; load 1111 into OSR (note that pull_thresh is set to 4)
    PULL noblock
test7:
    OUT pins, 1      ; shift 1 bit from OSR to putput pin (GPIO #5)
    JMP !osre test7  ; until OSR is empty (note that bits to shift out is set to 4 (pull_thresh))
    
    JMP end

wrong:
    JMP wrong

end:
    JMP end
    